难点  对ajax的理解   ajax提交   同步和异步

比如 删除区域 操作  首先在datagrid表  加一个 操作\删除 的字段  运用 列格式化 函数 formatter:function(value,row,index)
   此函数也为重要知识点  return  一个js a标签  提交有两种方式。 href=控制器方法？id="+row.id+"这种方式为同步 请求
                                                href=javascript: 控制器方法("+row.id+")这种方式为异步ajax请求
      如果 是用同步，则控制器在处理得到结果后应返回视图而不是json数据包，否则 响应的结果就只是一个键值对  而不是页面
      ajax请求是异步请求，页面发送请求，控制器 处理数据并返回数据，这个过程没有前后依赖的顺序，控制器返回json数据包，
      ajax再利用回调函数 将根据结果做响应处理，这就实现了  三者(前台页面 ，后台控制器，数据库)的相对独立
      删除操作   几个重点 就是  如何发送请求  如何传递参数
      发送请求 的方式决定于 a标签中href后面跟的请求路径怎么写 若直接跟控制器方法名  并用？传参 则是同步请求
                                                       若是用js+ajax提交  则是异步请求
       传参  删除单条记录时，参数id直接 用datagrid 的方法 或者列格式化中的row属性 的到id字段
                                    选取那种方法 取决于 该按钮的位置是否与表中字段有直接接触
如单条删除的按钮  在每列字段值的后面  可直接获取、
如果是批量删除  它的按钮在 表的上面 则要用到datagrid的datagrid("getSelections")方法  获取一行 或多行  对象

批量删除  上面讲到了  怎么获取参数id的集合  用getSelections方法得到的是一个数组  存的是一行数据 即一个对象
再遍历 数组 得到每个对象 并取出每个对象的id  拼接成id组成的字符串   再用ajax.post提交
      此提交方式 有哦四个参数  “控制器方法名”、“参数(与控制器中参数的类型的名称要一致)”、“回调函数”、“json(标识返回的数据格式)”
      在回调函数中 根据返回的数据值 进行下一步操作 比如判断是否操作成功  if(){}  else{}、成功则刷新datagrid
    整个难点 在于参数 如何传递 接收 页面传过去的是字符串 而dao层实现业务  用的参数是list集合
      所以在控制器中 将传过来的字符串转化成 list集合 再调用 业务层 代入参数集合  问题不大

    2、另外一个较难点 在于 关联性问题 删除区域后 区域下的 对象全要删除 页面不变  只要改业务层  还涉及到事物问题 一致性
    要删都删，要没删成功就都没删成功  直接将删除街道  where district_Id=#{district_Id}  在映射mapper文件中实现
    再一层层调用 ，嵌入到删除区域的业务中 可设置事务，以保证操作的一致性
再复杂一点的就是批量删除的关联性操作

3、nginx代理服务器的运用  连表查询  以及在页面绑定区域下拉列表  并显示（省市级联）相应区域下的街道下拉列表


